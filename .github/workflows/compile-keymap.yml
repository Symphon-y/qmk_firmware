name: Compile Keymap

on:
  push:
    branches:
      - 'keyboard/**'
  workflow_dispatch:
    inputs:
      keyboard_path:
        description: 'Keyboard Path (e.g., splitkb/aurora/lily58/rev1)'
        required: true
      keyboard:
        description: 'Keyboard Series (e.g., lily58)'
        required: true
      keymap:
        description: 'Keymap name (e.g., Symphony)'
        required: true
      version:
        description: 'Version Number (e.g., 0.0.1)'
        required: true

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Extract Keyboard and Keymap
      - name: Extract Keyboard and Keymap
        if: github.event_name == 'push'
        run: |
          BRANCH_NAME=${GITHUB_REF##*/}
          IFS='/' read -r -a PARTS <<< "$BRANCH_NAME"
          echo "Branch Name is: $BRANCH_NAME"
          if [ ${#PARTS[@]} -lt 4 ]; then
            echo "Invalid branch format. Expected keyboard/<distributor>/<product_line>/<model>/<board_version>/<keymap_name>/<keymap_version>"
            exit 1
          fi

          # Construct keymap_path
          kb_path=$(IFS='/'; echo "${PARTS[@]:0:$((${#PARTS[@]}-1))}")

          # Assign specific parts to environment variables
          echo "keyboard_path=$kb_path" >> $GITHUB_ENV
          echo "keyboard=${PARTS[1]}" >> $GITHUB_ENV
          echo "keymap=${PARTS[-2]}" >> $GITHUB_ENV
          echo "version=${PARTS[-1]}" >> $GITHUB_ENV


      - name: Use Inputs for Manual Trigger
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "keyboard_path=${{ github.event.inputs.keyboard_path}}" >> $GITHUB_ENV
          echo "keyboard=${{ github.event.inputs.keyboard }}" >> $GITHUB_ENV
          echo "keymap=${{ github.event.inputs.keymap }}" >> $GITHUB_ENV
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_ENV

      # Step 3: Install QMK dependencies
      - name: Install QMK Dependencies
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip git gcc-avr avr-libc gcc-arm-none-eabi binutils-arm-none-eabi libusb-dev dfu-programmer dfu-util
          pip install qmk

      # Step 5: Set up QMK firmware
      - name: Set up QMK Firmware
        run: qmk setup --yes

           # Step 6: Compile Firmware
      - name: Compile Firmware
        run: |
          ls -al
          qmk compile -e CONVERT_TO=promicro_rp2040 -kb ${{ env.keyboard_path }} -km ${{ env.keymap }}
          ls -al

      # Step 7: Move Generated Files
      - name: Move Compiled Firmware
        run: |
          mkdir -p ./firmware/${{ env.keyboard }}/${{ env.keymap }}/${{ env.version }}/
          for ext in uf2 bin hex; do
            cp ./*.$ext ./firmware/${{ env.keyboard }}/${{ env.keymap }}/${{ env.version }}/ 2>/dev/null || echo "No .$ext files found."
          done
        env:
          keyboard: ${{ env.keyboard }}
          keymap: ${{ env.keymap }}
          version: ${{ env.version }}

      # Step 8: Commit and Push Changes
      - name: Commit and Push Firmware
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add ./qmk_firmware/firmware/
          git commit -m "Add compiled firmware for ${{ env.keyboard }}:${{ env.keymap }} version ${{ env.version }}"
          git push origin ${{ github.ref_name }}
